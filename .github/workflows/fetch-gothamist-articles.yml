name: Fetch and Format Gothamist Articles

on:
  workflow_dispatch:

jobs:
  fetch-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure src directory exists
        run: mkdir -p src

      - name: Fetch Gothamist articles and format as JS export
        run: |
          curl -s "https://api-prod.gothamist.com/api/v2/pages/?type=news.ArticlePage&fields=listing_title,url&order=-publication_date&show_on_index_listing=true&limit=3&tag_slug=politics" \
          | jq -r '
              "export const coverageLinksGothamist = [" +
              (.items[] | "  { text: \"" + (.listing_title | gsub("\""; "\\\"")) + "\", href: \"" + .url + "\" },") +
              "\n];"
            ' > src/gothamist-links.js

      - name: Test output file
        run: |
          echo "Running validation on src/gothamist-links.js..."
          node <<'EOF'
          import { readFileSync } from 'fs';

          const contents = readFileSync('src/gothamist-links.js', 'utf8');
          const arrayMatch = contents.match(/export const coverageLinksGothamist = (\[.*\]);/s);

          if (!arrayMatch) {
            throw new Error("Could not parse coverageLinksGothamist array from JS file.");
          }

          const links = eval(arrayMatch[1]); // Safe in this controlled context

          if (!Array.isArray(links)) {
            throw new Error("Parsed value is not an array.");
          }

          if (links.length !== 3) {
            throw new Error(`Expected 3 links, but got ${links.length}.`);
          }

          for (const [i, link] of links.entries()) {
            if (typeof link.text !== 'string' || link.text.length < 5) {
              throw new Error(`Link ${i + 1} has an invalid 'text' field: ${link.text}`);
            }
            if (typeof link.href !== 'string' || link.href.length < 5) {
              throw new Error(`Link ${i + 1} has an invalid 'href' field: ${link.href}`);
            }
          }

          console.log("âœ… All tests passed.");
          EOF

      - name: Commit and push formatted JS file
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add src/gothamist-links.js
          git commit -m "Update gothamist-links.js with latest articles"
          git push
